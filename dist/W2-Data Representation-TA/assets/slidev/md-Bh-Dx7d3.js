import{_ as v}from"./CodeBlockWrapper.vue_vue_type_script_setup_true_lang-DV76dI9n.js";import{d as g,o as u,b as k,e as s,f as o,i as a,c as _,k as r,l as $,m as C,aa as d,q as h,s as y,B as p}from"../modules/vue-DgXCRfWC.js";import{_ as b}from"../index-sVsAd-eY.js";import{u as x,f as B}from"./context-C5LkTWr1.js";import"../modules/unplugin-icons-D2JuiHzE.js";import"../modules/shiki-hNccAHD9.js";const P="/assets/mem-BUdr7-ET.svg",w={class:"col-header"},N=g({__name:"two-cols-header",props:{class:{type:String},layoutClass:{type:String}},setup(i){const l=i;return(e,n)=>(u(),k("div",{class:a(["slidev-layout two-cols-header w-full h-full",i.layoutClass])},[s("div",w,[o(e.$slots,"default",{},void 0,!0)]),s("div",{class:a(["col-left",l.class])},[o(e.$slots,"left",{},void 0,!0)],2),s("div",{class:a(["col-right",l.class])},[o(e.$slots,"right",{},void 0,!0)],2),s("div",{class:a(["col-bottom",l.class])},[o(e.$slots,"bottom",{},void 0,!0)],2)],2))}}),S=b(N,[["__scopeId","data-v-50a39c32"]]),T={class:"mr-4"},V={__name:"W2-Data Representation-TA.md__slidev_5",setup(i){const{$slidev:l,$nav:e,$clicksContext:n,$clicks:z,$page:E,$renderContext:I,$frontmatter:m}=x();return n.setup(),(R,t)=>{const c=v;return u(),_(S,h(y(p(B)(p(m),4))),{left:r(f=>[t[1]||(t[1]=s("p",null,"在这张图中，显示了一个内存的排布顺序。",-1)),t[2]||(t[2]=s("ul",null,[s("li",null,"同一行中，地址连续，越靠近右侧地址越小"),s("li",null,"同一列中，地址不连续，越靠近下方地址越小"),s("li",null,"也就是说，呈现出了一个 Z 字形")],-1)),t[3]||(t[3]=s("p",null,"未来，你们可能会见识到各种内存排布方式，但无论如何，都要先搞清楚内存的排布方式，再去辨析大端序小端序。",-1)),s("div",T,[$(c,C({},{ranges:[]}),{default:r(()=>t[0]||(t[0]=[s("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[s("code",{class:"language-text"},[s("span",{class:"line"},[s("span",null,"全部内存 - 一块连续的内存空间（指令/数据） - 大端序/小端序 - 字节")])])],-1)])),_:1},16)]),t[4]||(t[4]=s("p",null,[d("当讨论的这个一块内存空间只有 1 个字节（例如：一个 "),s("code",null,"char"),d(" 类型）时，我们还需要考虑大端序小端序吗？NO!")],-1))]),right:r(f=>t[5]||(t[5]=[s("p",null,[s("img",{src:P,alt:"mem",class:"mx-auto"})],-1)])),default:r(()=>[t[6]||(t[6]=s("h1",null,"字节顺序",-1)),t[7]||(t[7]=s("p",null,"byte order",-1))]),_:1},16)}}},O=V;export{O as default};
